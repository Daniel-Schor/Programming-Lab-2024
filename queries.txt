revenue:
SELECT "storeID", "purchaseDate"::DATE AS day, SUM("total") AS sum
FROM purchase 
WHERE "purchaseDate" >= $1 
GROUP BY "storeID", day
ORDER BY day DESC

quality:
SELECT 
    "storeID",
    COUNT(DISTINCT "customerID") AS total_customers,
    SUM("order_count") AS total_orders,
    COUNT(DISTINCT CASE WHEN order_count = 1 THEN "customerID" END) AS one_time_customers,
    COUNT(DISTINCT CASE WHEN order_count > 2 THEN "customerID" END) AS loyal_customers
FROM (
    SELECT "storeID", "customerID", COUNT("purchaseID") AS order_count
    FROM purchase
	WHERE "purchaseDate" > '2022-12-31'
    GROUP BY "storeID", "customerID"
) AS customer_orders
GROUP BY "storeID";

Orders per hour per weekday (commented out for only total per hour):
SELECT
    EXTRACT(HOUR FROM "purchaseDate" AT TIME ZONE 'Europe/Berlin') AS hour,
    COUNT(*) AS total_orders
	--, (COUNT(*)*1.0)/(
	--	SELECT COUNT(distinct "purchaseDate"::DATE)
	--	FROM purchase
	--	WHERE "storeID" = 'S302800' AND EXTRACT(DOW FROM "purchaseDate" AT TIME ZONE 'Europe/Berlin') = 5 and "purchaseDate" > '2022-12-01')
FROM
    purchase
WHERE
    "storeID" = 'S302800' AND EXTRACT(DOW FROM "purchaseDate" AT TIME ZONE 'Europe/Berlin') = 5 and "purchaseDate" > '2022-12-01'
GROUP BY
    hour
ORDER BY
    hour;

Orders per hour per weekday (best pizza)
SELECT
    EXTRACT(HOUR FROM p."purchaseDate" AT TIME ZONE 'Europe/Berlin') AS hour,
    CONCAT(pr."Size", ' ', pr."Name") AS product,
    COUNT(*) AS total_orders
FROM
    purchase p
JOIN
    "purchaseItems" pi ON p."purchaseID" = pi."purchaseID"
JOIN
    products pr ON pi."SKU" = pr."SKU"
WHERE
    p."storeID" = 'S872983' 
    AND EXTRACT(DOW FROM p."purchaseDate" AT TIME ZONE 'Europe/Berlin') = 0
    AND p."purchaseDate" > '2022-12-15'
GROUP BY
    hour, pr."Name", pr."Size"
ORDER BY
    hour, total_orders DESC;